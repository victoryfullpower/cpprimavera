[1mdiff --git a/src/app/api/reg-deuda-detalle/[id]/route.js b/src/app/api/reg-deuda-detalle/[id]/route.js[m
[1mindex b4674d7..017c92e 100644[m
[1m--- a/src/app/api/reg-deuda-detalle/[id]/route.js[m
[1m+++ b/src/app/api/reg-deuda-detalle/[id]/route.js[m
[36m@@ -110,6 +110,12 @@[m [mexport async function PUT(request, { params }) {[m
     }[m
 [m
     const body = await request.json()[m
[32m+[m[32m    console.log('=== API PUT - DATOS RECIBIDOS ===')[m
[32m+[m[32m    console.log('Body completo:', body)[m
[32m+[m[32m    console.log('Campo idinquilino_activo recibido:', body.idinquilino_activo)[m
[32m+[m[32m    console.log('Tipo de idinquilino_activo:', typeof body.idinquilino_activo)[m
[32m+[m[32m    console.log('=== FIN DATOS RECIBIDOS ===')[m
[32m+[m[41m    [m
     const {[m
       idconcepto_deuda,[m
       idstand,[m
[36m@@ -117,7 +123,8 @@[m [mexport async function PUT(request, { params }) {[m
       monto,[m
       mora = 0,[m
       estado = true,[m
[31m-      lote = false[m
[32m+[m[32m      lote = false,[m
[32m+[m[32m      idinquilino_activo[m
     } = body[m
 [m
     // Validaciones[m
[36m@@ -141,6 +148,7 @@[m [mexport async function PUT(request, { params }) {[m
         mora: parseFloat(mora),[m
         estado: Boolean(estado),[m
         lote: Boolean(lote),[m
[32m+[m[32m        idinquilino_activo: idinquilino_activo !== undefined ? idinquilino_activo : null,[m
         updatedby: session.user.id[m
       },[m
       include: {[m
[36m@@ -150,6 +158,7 @@[m [mexport async function PUT(request, { params }) {[m
             client: true[m
           }[m
         },[m
[32m+[m[32m        inquilino_activo: true,[m
         createdBy: {[m
           select: {[m
             username: true[m
[36m@@ -163,6 +172,11 @@[m [mexport async function PUT(request, { params }) {[m
       }[m
     })[m
 [m
[32m+[m[32m    console.log('=== API PUT - RESULTADO ACTUALIZACIÃ“N ===')[m
[32m+[m[32m    console.log('Detalle actualizado:', detalleActualizado)[m
[32m+[m[32m    console.log('Campo idinquilino_activo en resultado:', detalleActualizado.idinquilino_activo)[m
[32m+[m[32m    console.log('=== FIN RESULTADO ===')[m
[32m+[m
     return NextResponse.json({[m
       ...detalleActualizado,[m
       monto: parseFloat(detalleActualizado.monto.toString()),[m
[1mdiff --git a/src/app/dashboard/reportes/estatus-stands/page.jsx b/src/app/dashboard/reportes/estatus-stands/page.jsx[m
[1mindex 1e46425..39bea43 100644[m
[1m--- a/src/app/dashboard/reportes/estatus-stands/page.jsx[m
[1m+++ b/src/app/dashboard/reportes/estatus-stands/page.jsx[m
[36m@@ -173,12 +173,57 @@[m [mexport default function EstatusStandsPage() {[m
         )[m
     }[m
 [m
[31m-    // Obtener deudas del inquilino (conceptos donde inquilinopaga = true)[m
[32m+[m[32m    // Obtener deudas del inquilino (conceptos donde inquilinopaga = true Y tienen idinquilino_activo asignado)[m
     const getDeudasInquilino = (idstand) => {[m
         return deudas.filter(deuda => [m
             deuda.idstand === idstand && [m
             deuda.concepto && [m
[31m-            deuda.concepto.inquilinopaga[m
[32m+[m[32m            deuda.concepto.inquilinopaga &&[m
[32m+[m[32m            deuda.idinquilino_activo // Solo deudas que tengan inquilino asignado[m
[32m+[m[32m        )[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Obtener todos los inquilinos Ãºnicos que han tenido deudas en este stand[m
[32m+[m[32m    const getInquilinosConDeudas = (idstand) => {[m
[32m+[m[32m        const deudasInquilino = getDeudasInquilino(idstand)[m
[32m+[m[32m        const inquilinosIds = [...new Set(deudasInquilino.map(deuda => deuda.idinquilino_activo))][m
[32m+[m[41m        [m
[32m+[m[32m        // Obtener informaciÃ³n completa de cada inquilino[m
[32m+[m[32m        const inquilinosConInfo = [][m
[32m+[m[32m        for (const idinquilino of inquilinosIds) {[m
[32m+[m[32m            if (idinquilino) {[m
[32m+[m[32m                // Buscar la primera deuda de este inquilino para obtener su informaciÃ³n[m
[32m+[m[32m                const primeraDeuda = deudasInquilino.find(deuda => deuda.idinquilino_activo === idinquilino)[m
[32m+[m[32m                if (primeraDeuda && primeraDeuda.inquilino_activo) {[m
[32m+[m[32m                    inquilinosConInfo.push({[m
[32m+[m[32m                        idinquilino: idinquilino,[m
[32m+[m[32m                        nombre: primeraDeuda.inquilino_activo.nombre,[m
[32m+[m[32m                        esActivo: idinquilino === getInquilinoActivo(idstand)?.idinquilino[m
[32m+[m[32m                    })[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        return inquilinosConInfo[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Obtener deudas de un inquilino especÃ­fico[m
[32m+[m[32m    const getDeudasPorInquilino = (idstand, idinquilino) => {[m
[32m+[m[32m        return deudas.filter(deuda =>[m[41m [m
[32m+[m[32m            deuda.idstand === idstand &&[m[41m [m
[32m+[m[32m            deuda.concepto &&[m[41m [m
[32m+[m[32m            deuda.concepto.inquilinopaga &&[m
[32m+[m[32m            deuda.idinquilino_activo === idinquilino[m
[32m+[m[32m        )[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Obtener deudas pendientes de asignaciÃ³n (conceptos donde inquilinopaga = true pero NO tienen idinquilino_activo)[m
[32m+[m[32m    const getDeudasPendientesAsignacion = (idstand) => {[m
[32m+[m[32m        return deudas.filter(deuda =>[m[41m [m
[32m+[m[32m            deuda.idstand === idstand &&[m[41m [m
[32m+[m[32m            deuda.concepto &&[m[41m [m
[32m+[m[32m            deuda.concepto.inquilinopaga &&[m
[32m+[m[32m            !deuda.idinquilino_activo // Deudas que NO tienen inquilino asignado[m
         )[m
     }[m
 [m
[36m@@ -202,6 +247,16 @@[m [mexport default function EstatusStandsPage() {[m
         }, 0)[m
     }[m
 [m
[32m+[m[32m    // Calcular total de deudas de un inquilino especÃ­fico[m
[32m+[m[32m    const getTotalDeudasPorInquilino = (idstand, idinquilino) => {[m
[32m+[m[32m        const deudasInquilino = getDeudasPorInquilino(idstand, idinquilino)[m
[32m+[m[32m        return deudasInquilino.reduce((total, deuda) => {[m
[32m+[m[32m            const monto = parseFloat(deuda.monto) || 0[m
[32m+[m[32m            const mora = parseFloat(deuda.mora || 0)[m
[32m+[m[32m            return total + monto + mora[m
[32m+[m[32m        }, 0)[m
[32m+[m[32m    }[m
[32m+[m
     // Calcular total pagado del cliente[m
     const getTotalPagadoCliente = (idstand) => {[m
         const deudasCliente = getDeudasCliente(idstand)[m
[36m@@ -218,6 +273,14 @@[m [mexport default function EstatusStandsPage() {[m
         }, 0)[m
     }[m
 [m
[32m+[m[32m    // Calcular total pagado de un inquilino especÃ­fico[m
[32m+[m[32m    const getTotalPagadoPorInquilino = (idstand, idinquilino) => {[m
[32m+[m[32m        const deudasInquilino = getDeudasPorInquilino(idstand, idinquilino)[m
[32m+[m[32m        return deudasInquilino.reduce((total, deuda) => {[m
[32m+[m[32m            return total + (Number(deuda.totalPagado) || 0)[m
[32m+[m[32m        }, 0)[m
[32m+[m[32m    }[m
[32m+[m
     // FunciÃ³n para abrir el modal de detalle[m
     const openDetailModal = (stand) => {[m
         setSelectedStandForDetail(stand)[m
[36m@@ -574,18 +637,15 @@[m [mexport default function EstatusStandsPage() {[m
                                             )}[m
                                         </div>[m
 [m
[31m-                                        {/* Deudas del Inquilino */}[m
[32m+[m[32m                                        {/* Deudas de Todos los Inquilinos */}[m
                                         <div className="space-y-4">[m
                                             <h4 className="text-lg font-semibold text-purple-60